{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/LegendStatistics/LegendStatistics.jsx","App.jsx","index.js"],"names":["module","exports","Section","title","children","className","css","section","protoType","PropTypes","string","isRequired","elementType","Statistics","good","neutral","bad","total","positivePercentage","container_statistics","statistics_item","statiscic_votes","FeedbackOptions","options","onLeaveFeedback","container_options","map","name","type","onClick","toUpperCase","slice","Notification","message","empty_statistics","LegendStatistics","App","useState","setGood","setNeutral","state","countTotalFeedback","data","rangVote","target","prevState","toFixed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1af194a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_statistics\":\"Statistics_container_statistics__1AcVw\",\"statistics_item\":\"Statistics_statistics_item__2FmXd\",\"statiscic_votes\":\"Statistics_statiscic_votes__P8ygP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3rnHt\",\"title\":\"Section_title__r23Tw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container_options\":\"FeedbackOptions_container_options__1UyQM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty_statistics\":\"Notification_empty_statistics__s2T1x\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <section className={css.section}>\n    <h1 className={css.title}>{title}</h1>\n    {children}\n  </section>\n);\n\nSection.protoType = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.elementType.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={css.container_statistics}>\n    <li className={css.statistics_item}>\n      Good:\n      <span className={css.statiscic_votes}> {good}</span>\n    </li>\n    <li className={css.statistics_item}>\n      Neutral:\n      <span className={css.statiscic_votes}> {neutral}</span>\n    </li>\n    <li className={css.statistics_item}>\n      Bad:\n      <span className={css.statiscic_votes}> {bad}</span>\n    </li>\n    <li className={css.statistics_item}>\n      Total:\n      <span className={css.statiscic_votes}> {total}</span>\n    </li>\n    <li className={css.statistics_item}>\n      Positive feedback:\n      <span className={css.statiscic_votes}> {positivePercentage}%</span>\n    </li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.string,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={css.container_options}>\n    {options.map((name) => (\n      <button type=\"button\" key={name} name={name} onClick={onLeaveFeedback}>\n        {name && name[0].toUpperCase() + name.slice(1)}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <p className={css.empty_statistics}>{message}</p>\n);\n\nNotification.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from \"./LegendStatistics.module.css\";\n\nconst LegendStatistics = ({ title, children }) => (\n  <fieldset>\n    <legend className={css.title}>{title}</legend>\n    {children}\n  </fieldset>\n);\n\nLegendStatistics.protoType = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.elementType.isRequired,\n};\n\nexport default LegendStatistics;\n","import { useState } from \"react\";\n\nimport Section from \"./components/Section/Section\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\nimport LegendStatistics from \"./components/LegendStatistics/LegendStatistics\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const state = { good: setGood, neutral: setNeutral, bad: setBad };\n\n  const vote = (data) => {\n    const rangVote = data.target.name;\n    state[rangVote]((prevState) => prevState + 1);\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return good ? ((good * 100) / countTotalFeedback()).toFixed(0) : 0;\n  };\n\n  return (\n    <Section title=\"Please leave feedback\">\n      <FeedbackOptions\n        options={[\"good\", \"neutral\", \"bad\"]}\n        onLeaveFeedback={vote}\n      />\n      <LegendStatistics title=\"Statistics\">\n        {countTotalFeedback() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </LegendStatistics>\n    </Section>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}